@using System.Security.Claims
@using PopBlog.Mvc
@using PopBlog.Mvc.Services
@model PopBlog.Mvc.Models.Post
@inject IPostService PostService
@inject IConfig Config
@{
	Layout = null;
	var isDetail = false;
	if (ViewBag.IsDetail != null)
	{
		isDetail = (bool) ViewBag.IsDetail;
	}
	var downloadLink = Config.IsUsingDirectDownload.HasValue && Config.IsUsingDirectDownload.Value 
		? await PostService.GetDownloadLink(Model.PostID) 
		: Url.Action("Download", "Post", new {id = Model.PostID});
	var showDownloadCount = !(Config.IsUsingDirectDownload.HasValue && Config.IsUsingDirectDownload.Value);
}

<div class="my-3">
	@if (isDetail)
	{
		<h1 class="blogPostTitle mb-3">@Model.Title</h1>
	}
	else
	{
		<h2 class="blogPostTitle mb-3"><a asp-controller="Post" asp-action="Detail" asp-route-urlTitle="@Model.UrlTitle">@Model.Title</a></h2>
	}
	@if (Model.IsPodcastPost)
	{
		<p><a href="@downloadLink">Download...</a> <text>| Length: </text> @Model.Length <text>| Size: </text> @(Model.Size/1024/1024)MB 
			@if (showDownloadCount){
			<text>| Downloads: </text> @Model.DownloadCount }
		</p>
	}
	<small class="blogPostDetails my-3">
		posted by @Model.Name | @Model.TimeStamp.ToString("dddd, MMMM d, yyyy, h:mm tt") | <a asp-controller="Post" asp-action="Detail" asp-route-urlTitle="@Model.UrlTitle" asp-fragment="comments">comments</a>: @Model.Replies
		@if (User.HasClaim(ClaimTypes.Role, "Admin"))
		{
			<text>|</text>
			<a asp-controller="Admin" asp-action="EditPost" asp-route-postID="@Model.PostID">Edit</a>
		}
	</small>
	<div class="postBody my-3">
		@Html.Raw(Model.FullText)
	</div>
	<hr class="mb-5" />
</div>